Python_Study
├── Установка_и_настройка_Python
│   ├── Как_установить_Python_на_разных_ОС (Windows, macOS, Linux)
│   ├── Настройка_переменных_окружения_для_Python
│   ├── Использование_менеджера_версий_Python (pyenv, asdf)
│   └── Проверка_и_обновление_установленной_версии_Python
├── Основы_работы_с_консолью
│   ├── Навигация_по_файловой_системе_в_консоли (cd, ls, pwd)
│   ├── Основные_команды_управления_файлами (mkdir, touch, rm, cp, mv)
│   ├── Запуск_скриптов_Python_из_консоли
│   ├── Перенаправление_вывода_и_ввода (>, >>, <, |)
│   ├── Использование_редактора_vim_для_работы_с_файлами
│   └── Получение_справки_о_командах (man, --help)
├── Настройка_и_использование_виртуальных_окружений
│   ├── Создание_и_активация_виртуального_окружения (venv, virtualenv)
│   ├── Установка_и_управление_зависимостями_с_pip
│   ├── Создание_и_использование_requirements.txt
│   ├── Использование_pipenv_и_poetry_для_управления_проектами
│   └── Установка_глобальных_и_локальных_пакетов
├── Основы_синтаксиса_Python
│   ├── Введение_в_Python_и_синтаксис_комментариев
│   ├── Что_такое_переменная_и_имена_переменных
│   ├── Типы_данных_и_их_использование
│   │   ├── Целые_числа (int)
│   │   ├── Числа_с_плавающей_точкой (float)
│   │   ├── Строки_и_их_основные_методы (str)
│   │   ├── Логический_тип (bool)
│   │   ├── Списки (list)
│   │   │   ├── Создание_и_инициализация_списков
│   │   │   ├── Индексация_и_срезы_списков
│   │   │   ├── Основные_методы_списков (append, remove, pop, sort)
│   │   │   └── Вложенные_списки_и_обход_списков_в_цикле
│   │   ├── Кортежи (tuple)
│   │   │   ├── Создание_и_использование_кортежей
│   │   │   ├── Неизменяемость_кортежей
│   │   │   └── Примеры_использования_кортежей
│   │   ├── Словари (dict)
│   │   │   ├── Создание_и_инициализация_словарей
│   │   │   ├── Основные_операции_со_словарями (добавление, удаление, доступ)
│   │   │   └── Перебор_элементов_словаря
│   │   ├── Множества (set)
│   │   │   ├── Создание_и_использование_множеств
│   │   │   ├── Операции_над_множествами (объединение, пересечение, разность)
│   │   │   └── Примеры_использования_множеств
│   │   └── Специальные_значения (None, True, False)
│   ├── Операторы_и_выражения
│   │   ├── Арифметические_операторы (+, -, *, /, //, %, **)
│   │   ├── Логические_операторы (and, or, not)
│   │   ├── Операторы_сравнения (==, !=, >, <, >=, <=)
│   │   ├── Операторы_присваивания (=, +=, -=, *=, /=)
│   │   ├── Битовые_операции (|, &, ^, ~, <<, >>)
│   │   └── Операторы_идентичности_и_принадлежности (is, is not, in, not in)
│   ├── Условные_выражения
│   │   ├── if-else_и_elif
│   │   ├── Логические_выражения_в_условных_операторах
│   │   └── Тернарный_оператор
│   ├── Циклы
│   │   ├── for
│   │   ├── while
│   │   ├── Вложенные_циклы_и_их_применение
│   │   ├── Операторы_continue_и_break
│   │   └── Генераторы_списков_и_встроенные_цикл_с_for
│   ├── Функции
│   │   ├── Определение_и_вызов_функций
│   │   ├── Аргументы_и_параметры_функций
│   │   │   ├── Обязательные_и_необязательные_аргументы
│   │   │   ├── Аргументы_по_умолчанию
│   │   │   └── Аргументы_произвольной_длины (*args, **kwargs)
│   │   ├── Возврат_значений_из_функции
│   │   ├── Области_видимости_переменных (global, nonlocal)
│   │   ├── Вложенные_функции
│   │   └── Анонимные_функции (lambda)
│   ├── Исключения
│   │   ├── Что_такое_исключение_и_как_оно_возникает
│   │   ├── Обработка_исключений (try-except)
│   │   ├── Вложенные_и_множественные_блоки_except
│   │   ├── Генерация_исключений_с_помощью_raise
│   │   ├── Пользовательские_исключения
│   │   └── Конструкция_finally
│   └── Работа_с_файлами
│       ├── Открытие_и_закрытие_файлов
│       ├── Чтение_и_запись_данных_в_файлы
│       ├── Работа_с_различными_форматами_файлов (txt, csv, json)
│       └── Обработка_ошибок_при_работе_с_файлами
├── Основные_встроенные_пакеты_Python
│   ├── datetime_модуль
│   │   ├── Работа_с_датами_и_временем
│   │   ├── Форматирование_и_разбор_строк_дат
│   │   ├── Вычисление_разницы_между_датами
│   │   └── Работа_с_временными_зонами
│   ├── collections_модуль
│   │   ├── namedtuple
│   │   ├── deque
│   │   ├── defaultdict
│   │   ├── Counter
│   │   └── OrderedDict
│   ├── itertools_модуль
│   │   ├── Комбинаторные_функции (product, permutations, combinations)
│   │   ├── Функции_для_создания_итерируемых_объектов (cycle, repeat)
│   │   ├── Функции_для_фильтрации (filterfalse, dropwhile, takewhile)
│   │   └── Группировка_и_объединение_данных (groupby, zip_longest)
│   └── functools_модуль
│       ├── partial
│       ├── reduce
│       ├── wraps
│       └── lru_cache
├── Работа_с_линтерами_и_форматированием_кода
│   ├── Введение_в_линтеры
│   │   ├── Что_такое_линтер_и_зачем_он_нужен
│   │   ├── Установка_и_настройка_pylint
│   │   ├── Установка_и_настройка_flake8
│   │   └── Понимание_и_устранение_замечаний_линтеров
│   ├── Форматирование_кода_с_помощью_black
│   ├── Использование_isort_для_сортировки_импортов
│   └── Настройка_и_использование_mypy_для_проверки_типов
├── Продвинутый_синтаксис_Python
│   ├── Генераторы
│   │   ├── Понятие_генераторов_в_Python
│   │   ├── Генераторы_списков (list comprehensions)
│   │   ├── Генераторы_слов (dictionary comprehensions)
│   │   ├── Генераторы_множеств_и_кортежей
│   │   ├── Функции_генераторы (yield)
│   │   └── Использование_генераторов_для_оптимизации_памяти
│   ├── Итераторы_и_итерируемые_объекты
│   │   ├── Протокол_итерации_в_Python
│   │   ├── Создание_собственных_итераторов_и_итерируемых_объектов
│   │   ├── Функции_iter_и_next
│   │   └── Применение_итераторов_в_реальных_сценариях
│   ├── Работа_с_контекстными_менеджерами
│   │   ├── Использование_оператора_with
│   │   ├── Создание_собственных_контекстных_менеджеров
│   │   ├── Обработка_исключений_в_контекстных_менеджерах
│   │   └── Работа_с_файловыми_ресурсами_и_сетевыми_подключениями
│   ├── Модули_и_пакеты
│   │   ├── Импорт_модулей_и_пакетов
│   │   ├── Разница_между_модулями_и_пакетами
│   │   ├── Создание_собственных_модулей
│   │   ├── Структурирование_проекта_на_модули_и_пакеты
│   │   └── Управление_зависимостями_между_модулями
│   ├── Декораторы
│   │   ├── Введение_в_декораторы
│   │   ├── Применение_декораторов_к_функциям
│   │   ├── Создание_собственных_декораторов
│   │   ├── Декораторы_для_классов_и_методов
│   │   └── Наследование_и_комбинирование_декораторов
│   ├── Продвинутая_работа_с_классами_и_объектами
│   │   ├── Наследование_и_переопределение_методов
│   │   ├── Полиморфизм_и_его_применение
│   │   ├── Инкапсуляция_и_защита_данных
│   │   ├── Метаклассы
│   │   ├── Динамическое_создание_классов_и_методов
│   │   └── Протоколы_и_абстрактные_базовые_классы (ABC)
│   ├── Управление_памятью
│   │   ├── Сборка_мусора_в_Python
│   │   ├── Профилирование_и_оптимизация_памяти
│   │   ├── Работа_с_слабыми_ссылками (weakref)
│   │   └── Управление_ресурсами_и_их_освобождение
│   └── Асинхронное_программирование
│       ├── Введение_в_асинхронное_программирование
│       ├── Работа_с_модулем_asyncio
│       ├── async_и_await_для_асинхронного_кода
│       ├── Создание_и_управление_задачами_в_asyncio
│       └── Примеры_использования_асинхронных_функций_в_проектах
├── Тестирование_в_Python
│   ├── Введение_в_модуль_unittest
│   │   ├── Написание_простых_тестов
│   │   ├── Организация_и_запуск_тестов
│   │   ├── Использование_setUp_и_tearDown_методов
│   │   └── Тестирование_исключений_и_обработки_ошибок
│   ├── Тестирование_с_pytest
│   │   ├── Установка_и_настройка_pytest
│   │   ├── Написание_тестов_с_использованием_pytest
│   │   ├── Параметризация_тестов
│   │   ├── Mocking_и_создание_фикстур
│   │   └── Организация_тестирования_асинхронного_кода
│   └── Continuous_Integration_и_автоматическое_тестирование
│       ├── Настройка_CI_с_использованием_GitHub_Actions
│       ├── Настройка_и_запуск_автоматических_тестов_в_CI
│       ├── Генерация_и_анализ_отчетов_о_покрытии_кода
│       └── Создание_и_поддержка_тестовых_окружений
├── Работа_с_файловой_системой_и_данными
│   ├── Манипуляция_файловой_системой
│   │   ├── Копирование_и_перемещение_файлов (shutil)
│   │   ├── Удаление_файлов_и_каталогов
│   │   ├── Работа_с_метаданными_файлов (размер, время создания, права доступа)
│   │   └── Рекурсивный_обход_директорий
│   ├── Работа_с_большими_файлами
│   │   ├── Пошаговое_чтение_и_обработка_данных
│   │   ├── Использование_буферизации_для_оптимизации_памяти
│   │   └── Обработка_файлов_большого_размера_в_асинхронном_режиме
│   └── Обработка_текста_и_регулярные_выражения
│       ├── Основы_работы_с_регулярными_выражениями_в_Python (модуль re)
│       ├── Поиск_и_замена_с_использованием_регулярных_выражений
│       ├── Разбор_и_токенизация_текста
│       └── Обработка_многострочных_текстов_и_парсинг_логов
├── Работа_с_сетями_и_веб_программирование
│   ├── Основы_сетевого_программирования (sockets)
│   │   ├── Создание_простого_сокетного_сервера_и_клиента
│   │   ├── Работа_с_TCP_и_UDP_протоколами
│   │   ├── Передача_данных_по_сети
│   │   └── Обработка_событий_и_асинхронное_сетевое_программирование
│   ├── HTTP_и_работа_с_web (модуль requests)
│   │   ├── Отправка_HTTP_запросов_и_обработка_ответов
│   │   ├── Работа_с_API_и_авторизацией
│   │   ├── Загрузка_и_отправка_файлов_по_сети
│   │   └── Обработка_ошибок_и_повторов_в_сети
│   ├── Создание_простых_веб-приложений (Flask)
│   │   ├── Введение_в_Flask
│   │   ├── Создание_маршрутов_и_обработка_HTTP_запросов
│   │   ├── Шаблоны_и_генерация_HTML_страниц
│   │   └── Управление_сессиями_и_аутентификацией
│   └── Работа_с_websocket
│       ├── Основы_веб-сокетов_и_их_применение
│       ├── Создание_сервера_и_клиента_с_использованием_websockets
│       ├── Обработка_сообщений_и_событий
│       └── Примеры_приложений_на_основе_websocket
├── Работа_с_базами_данных
│   ├── Введение_в_SQL_и_реляционные_базы_данных
│   │   ├── Основные_понятия_и_операции_с_базами_данных
│   │   ├── Подключение_к_базам_данных_с_помощью_pymysql_или_sqlalchemy
│   │   ├── Выполнение_SQL-запросов (SELECT, INSERT, UPDATE, DELETE)
│   │   ├── Работа_с_ORM_и_моделями_данных
│   │   └── Оптимизация_и_индексирование_запросов
│   ├── Работа_с_NoSQL_базами_данных
│   │   ├── Введение_в_NoSQL_и_их_особенности
│   │   ├── Подключение_к_MongoDB_и_основные_операции_с_данными
│   │   ├── Работа_с_документами_и_коллекциями
│   │   └── Использование_ORM_для_NoSQL_баз_данных
│   └── Работа_с_библиотекой_Pandas_для_анализа_данных
│       ├── Введение_в_Pandas_и_основные_объекты (Series, DataFrame)
│       ├── Чтение_и_запись_данных_в_Pandas
│       ├── Манипуляция_и_анализ_данных_с_Pandas
│       └── Визуализация_данных_с_использованием_библиотеки_Pandas
├── Продвинутое_ООП_в_Python
│   ├── Абстрактные_классы_и_интерфейсы
│   │   ├── Введение_в_абстрактные_базовые_классы (ABC)
│   │   ├── Создание_абстрактных_классов_и_методов
│   │   ├── Интерфейсы_и_их_реализация
│   │   └── Наследование_и_реализация_абстрактных_методов
│   ├── Метаклассы
│   │   ├── Введение_в_метаклассы
│   │   ├── Создание_и_использование_метаклассов
│   │   ├── Динамическое_создание_классов_с_помощью_метаклассов
│   │   └── Примеры_использования_метаклассов_в_реальных_проектах
│   ├── Декораторы_и_менеджеры_контекста_в_ООП
│   │   ├── Применение_декораторов_в_классах
│   │   ├── Декораторы_методов_и_свойств
│   │   ├── Создание_менеджеров_контекста_с_использованием_ООП
│   │   └── Управление_ресурсами_в_ООП_приложениях
│   ├── Протоколы_и_утилизация_ресурсов
│   │   ├── Протоколы_итерации_и_контейнеров
│   │   ├── Менеджеры_ресурсов_и_сборка_мусора
│   │   ├── Использование_weakref_для_управления_ссылками
│   │   └── Оптимизация_работы_с_объектами_и_памятью
│   └── Продвинутые_техники_рефакторинга
│       ├── Разделение_ответственности_и_декомпозиция
│       ├── Применение_паттернов_проектирования_в_Python
│       ├── Рефакторинг_с_использованием_декораторов_и_менеджеров_контекста
│       └── Паттерн_Стратегия_и_его_применение
├── Многопоточность_и_многозадачность_в_Python
│   ├── Основы_многопоточности_в_Python
│   │   ├── Потоки_и_процессы (threading, multiprocessing)
│   │   ├── Создание_и_управление_потоками
│   │   ├── Синхронизация_потоков_с_помощью_lock_и_RLock
│   │   ├── Очереди_и_управление_задачами_в_многопоточных_системах
│   │   └── Многопоточность_в_реальных_приложениях
│   ├── Многозадачность_и_асинхронное_программирование
│   │   ├── Асинхронное_программирование_с_asyncio
│   │   ├── Работа_с_асинхронными_генераторами_и_корутинами
│   │   ├── Параллельное_выполнение_задач
│   │   └── Синхронизация_и_обработка_ошибок_в_асинхронном_коде
│   └── Профилирование_и_отладка_многопоточных_и_асинхронных_приложений
│       ├── Инструменты_для_профилирования_и_отладки
│       ├── Логирование_и_мониторинг_в_многопоточных_системах
│       ├── Поиск_и_устранение_узких_мест
│       └── Обеспечение_производительности_и_устойчивости_приложений
├── Безопасность_и_шифрование_в_Python
│   ├── Основы_криптографии_и_шифрования
│   │   ├── Введение_в_криптографию_и_основные_понятия
│   │   ├── Использование_модуля_hashlib_для_хеширования
│   │   ├── Шифрование_и_дешифрование_с_использованием_модуля_cryptography
│   │   ├── Генерация_и_управление_ключами
│   │   └── Подпись_и_проверка_данных
│   ├── Управление_доступом_и_аутентификация
│   │   ├── Реализация_аутентификации_в_веб-приложениях
│   │   ├── Работа_с_токенами_и_сессиями
│   │   ├── Защита_от_вредоносных_атак_и_инъекций
│   │   └── Шифрование_и_управление_сессионными_данными
│   ├── Работа_с_SSL_и_HTTPS
│   │   ├── Настройка_SSL_сертификатов
│   │   ├── Защищенные_соединения_в_сокетах
│   │   ├── Обеспечение_безопасности_веб-приложений_с_HTTPS
│   │   └── Профилирование_и_мониторинг_безопасности_связи
│   └── Работа_с_безопасностью_данных
│       ├── Шифрование_и_хранение_конфиденциальных_данных
│       ├── Безопасная_работа_с_файлами_и_базами_данных
│       ├── Анонимизация_и_маскирование_данных
│       └── Защита_данных_в_облачных_сервисах
├── Инструменты_и_библиотеки_для_научных_исследований_и_анализа_данных
│   ├── Введение_в_научные_библиотеки_в_Python
│   │   ├── Основы_NumPy_и_работа_с_массивами
│   │   ├── Введение_в_SciPy_и_его_применение
│   │   ├── Основы_математического_моделирования_с_Matplotlib
│   │   ├── Введение_в_библиотеку_Seaborn_для_визуализации_данных
│   │   └── Использование_библиотеки_Scikit-learn_для_машинного_обучения
│   ├── Введение_в_машинное_обучение_и_искусственный_интеллект
│   │   ├── Основы_машинного_обучения
│   │   ├── Создание_и_обучение_моделей_с_помощью_Scikit-learn
│   │   ├── Введение_в_глубокое_обучение_с_TensorFlow_и_Keras
│   │   └── Применение_нейронных_сетей_в_различных_областях
│   ├── Анализ_данных_и_обработка_больших_объемов_данных
│   │   ├── Работа_с_большими_данными_с_использованием_Pandas
│   │   ├── Основы_анализов_данных_и_визуализации
│   │   ├── Применение_методов_кластеризации_и_классификации
│   │   └── Введение_в_обработку_естественного_языка_с_NLTK_и_SpaCy
│   └── Применение_научных_инструментов_в_реальных_проектах
│       ├── Исследовательский_анализ_данных_и_выводы
│       ├── Визуализация_данных_и_представление_результатов
│       ├── Создание_репродуцируемых_исследований_с_Jupyter_Notebooks
│       └── Применение_методов_машинного_обучения_в_прикладных_задачах
├── Контейнеризация_и_развертывание_Python_приложений
│   ├── Введение_в_Docker_и_контейнеризацию
│   │   ├── Основы_контейнеров_и_их_применение
│   │   ├── Создание_и_оптимизация_Dockerfile_для_Python_приложений
│   │   ├── Работа_с_образами_и_контейнерами
│   │   ├── Организация_окружения_для_разработки_и_производства
│   │   └── Управление_данными_и_томами_в_Docker
│   ├── CI-CD_для_Python_проектов
│   │   ├── Настройка_и_интеграция_CI-CD_с_использованием_GitHub_Actions_и_GitLab_CI
│   │   ├── Автоматическое_тестирование_и_развертывание_приложений
│   │   ├── Настройка_окружений_для_разных_стадий_разработки
│   │   └── Мониторинг_и_логирование_развернутых_приложений
│   └── Развертывание_и_мониторинг_на_облачных_платформах
│       ├── Введение_в_облачные_платформы (AWS, Google_Cloud, Azure)
│       ├── Развертывание_контейнеров_в_облаке
│       ├── Управление_ресурсами_и_автоскейлинг
│       ├── Мониторинг_производительности_и_оповещения
│       └── Безопасность_и_управление_доступом_в_облачных_сервисах
└── Оптимизация_и_производительность_Python_кода
    ├── Профилирование_и_оптимизация_производительности
    │   ├── Инструменты_для_профилирования_кода (cProfile, line_profiler)
    │   ├── Поиск_узких_мест_и_оптимизация_алгоритмов
    │   ├── Оптимизация_работы_с_памятью
    │   └── Использование_Cython_для_ускорения_выполнения_кода
    ├── Многопоточность_и_многозадачность_для_повышения_производительности
    │   ├── Использование_многопоточности_для_ускорения_вычислений
    │   ├── Асинхронное_выполнение_задач_для_оптимизации_времени_ответа
    │   ├── Применение_многопроцессорности_для_тяжелых_вычислений
    │   └── Параллельная_обработка_данных_и_задач
    └── Оптимизация_работы_с_внешними_системами_и_интерфейсами
        ├── Оптимизация_запросов_к_базам_данных_и_API
        ├── Кеширование_и_буферизация_данных
        ├── Сокращение_времени_загрузки_данных_и_ресурсов
        └── Использование_тестирования_нагрузки_для_определения_производительности     